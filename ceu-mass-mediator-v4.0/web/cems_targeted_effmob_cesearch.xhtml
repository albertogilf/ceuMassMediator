<?xml version='1.0' encoding='UTF-8' ?> 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">
    <ui:composition template="/template_general.xhtml">
        <ui:define name="head">
            <title>CE/MS Targeted Search. CEU mass mediator</title>
        </ui:define>

        <ui:param name="onloadbody" value="#{CEMSTargetedController.clearForm()}"/>
        <ui:param name="idbody" value="searchbody"/>

        <ui:define name="intro-wrapper">
            <!--
            <div class="title">Simple Search</div>
            -->

            <div class="form" >
                <h:form id="mainsearch" prependId="false">
                    <h:commandButton id="dummy" actionListener="#{CEMSTargetedController.submitTargetedCEMSSearch(4)}" 
                                     action="cems_targeted_list?faces-redirect=true" style="display:none;"
                                     />
                    <div id="highlights" class="container whiteborder">
                        <center>
                            <label style="float: top">Beta version</label>
                            <label style="float: top">(*) Mandatory fields</label>
                            <h:commandButton 
                                    id="loadDemo" 
                                    type="submit" 
                                    value="Load demo data" 
                                    action="#{CEMSTargetedController.seteffMobTargetedCEDemoMasses()}" 
                                    immediate="true"
                                    style="width:40%">
                                    <f:ajax render="@form"/>
                                    <f:actionListener type="org.omnifaces.eventlistener.ResetInputAjaxActionListener" />
                            </h:commandButton>
                            <br/>
                            <br/>
                            <input id="uploadceexperiment" type="file"  accept="text/plain,.csv, 
                                application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 
                                application/vnd.ms-excel" name="file" size="30"/>
                        </center>
                        <p:panelGrid columns="3" columnClasses="ui-grid-col-4,ui-grid-col-4,ui-grid-col-4" layout="grid" styleClass="ui-panelgrid-blank">
                            
                            
                            <p:row>
                                    <label for="ionsourcevoltagemenu" style="float: top">Ion Source voltage: &nbsp;</label>
                                    <p:selectOneListbox id="ionsourcevoltagemenu" 
                                                        required="true"
                                                        value="#{CEMSTargetedController.ionSourceVoltage}"
                                                        requiredMessage="Select the ion and voltage"
                                                        style="width:100%">
                                        <f:selectItems value="#{CEMSTargetedController.ionSourceVoltageCandidates}" />
                                        <f:ajax execute="ionsourcevoltagemenu" render="ionsourcevoltagemenu"/>
                                    </p:selectOneListbox>
                                    <p:message for="ionsourcevoltagemenu" styleClass="errormessage"></p:message>
                            </p:row>
                            
                            <p:row>
                                <label for="chemicalalphabet" class="tooltip">Chemical Alphabet (*): &nbsp;
                                    <span class="tooltiptext">Search restricted to selected elements<br/>
                                    </span>
                                </label>
                                <p:selectOneListbox id="chemicalalphabet" 
                                                    value="#{CEMSTargetedController.chemAlphabet}"
                                                    style="width:100%">
                                    <f:selectItem itemLabel="All" itemValue="ALL" />
                                    <f:selectItem itemLabel="CHNOPS" itemValue="CHNOPS" />
                                    <f:selectItem itemLabel="CHNOPS + Cl" itemValue="CHNOPSCL" />
                                </p:selectOneListbox>
                                <div class="ui-panelgrid-cell ui-grid-col-6">
                                    <p:outputLabel for="@next" value="Deuterium: " />
                                </div>
                                <div class="ui-panelgrid-cell ui-grid-col-6">
                                    <p:selectBooleanCheckbox id="checkboxdeuterium" value="#{CEMSTargetedController.includeDeuterium}" />
                                </div>
                            </p:row>
                            <p:row></p:row>
                        </p:panelGrid>


                        <p:panelGrid columns="3" columnClasses="ui-grid-col-4,ui-grid-col-4,ui-grid-col-4" layout="grid" styleClass="ui-panelgrid-blank">

                            <p:row>
                                <label for="massesmodemenu" style="float: top">Input Mass Mode:</label>
                                <p:selectOneListbox id="massesmodemenu" 
                                                    value="#{CEMSTargetedController.massesMode}"
                                                    style="width:100%">
                                    <f:selectItem itemValue="0" itemLabel="Neutral Masses"/>
                                    <f:selectItem itemValue="1" itemLabel="m/z Masses"/>
                                    <f:ajax execute="massesmodemenu" render="massesmodemenu ionmodemenu 
                                            adductsmenu messageionmode"/>
                                </p:selectOneListbox>
                                <p:message for="massesmodemenu" styleClass="errormessage"></p:message>
                            </p:row>

                            <p:row>
                                <label for="ionmodemenu" style="float: top">Ionization Mode:</label>
                                <p:selectOneListbox id="ionmodemenu" 
                                                    value="#{CEMSTargetedController.ionMode}"
                                                    required="true"
                                                    requiredMessage="Choose an ionization mode"
                                                    style="width:100%">
                                    <f:selectItems value="#{CEMSTargetedController.ionizationModeCandidates}" />
                                    <f:ajax execute="ionmodemenu" render=" ionmodemenu adductsmenu messageionmode"/>
                                </p:selectOneListbox>
                                <p:message for="ionmodemenu" styleClass="errormessage"></p:message>
                                <p:outputLabel id="messageionmode"
                                               value="#{CEMSTargetedController.showMessageForNeutralMasses()}"
                                               style="float: top"
                                               />
                            </p:row>

                            <p:row>
                                <label for="adductsmenu" style="float: top">Adducts:</label>
                                <p:selectManyMenu id="adductsmenu" 
                                                  value="#{CEMSTargetedController.adducts}" 
                                                  filter="false" 
                                                  filterMatchMode="contains"
                                                  showCheckbox="true"
                                                  required="true"
                                                  requiredMessage="Choose some adduct"
                                                  style="width:100%">
                                    <f:selectItems value="#{CEMSTargetedController.adductsCandidates}" />
                                </p:selectManyMenu>
                                <p:message for="adductsmenu" styleClass="errormessage"></p:message>
                            </p:row>

                        </p:panelGrid>
                        
                        <hr/>
                        
                        <p:panelGrid columns="3" columnClasses="ui-grid-col-4,ui-grid-col-4,ui-grid-col-4" layout="grid" styleClass="ui-panelgrid-blank">
                            <p:row>
                                <label for="inputmasses" class="tooltip">Experimental Masses (*):
                                    <span class="tooltiptext">m/z of the experimental masses</span>
                                </label>
                                <p:inputTextarea id="inputmasses"
                                                 value="#{CEMSTargetedController.queryInputMasses}"
                                                 required="true"
                                                 pt:placeholder="enter CE m/zs"
                                                 autoResize="false"                                                 
                                                 style=" overflow: auto; width:100%"
                                                 />
                                <p:message for="inputmasses" styleClass="errormessage"></p:message>
                            </p:row>

                            <p:row>
                                <label for="effmobs" class="tooltip">Effective Mobilities:
                                    <span class="tooltiptext">
                                        Effective mobilities
                                    </span>
                                </label>
                                <p:inputTextarea id="effmobs"
                                                 value="#{CEMSTargetedController.queryInputRMTs}"
                                                 pt:placeholder="enter eff mobilities"
                                                 autoResize="false"     
                                                 style=" overflow: auto; width:100%"
                                                 />
                                <p:message for="effmobs" styleClass="errormessage"></p:message>
                            </p:row>
                            <p:row>
                                <label for="groupedsignals" class="tooltip">Signals grouped (mz, int):
                                    <span class="tooltiptext">
                                        Signals grouped with the format (mz1, int1),(mz2,int2),...,(mzN,intN)
                                    </span>
                                </label>
                                <p:inputTextarea id="groupedsignals"
                                                 value="#{CEMSTargetedController.queryInputGroupedSignals}"
                                                 pt:placeholder="Signals grouped with the format (mz1, int1),(mz2,int2),...,(mzN,intN)"
                                                 autoResize="false"     
                                                 style=" overflow: auto; width:100%"
                                                 />
                                <p:message for="groupedsignals" styleClass="errormessage"></p:message>
                            </p:row>

                            <p:row></p:row>
                            <p:row>
                                <div class="ui-panelgrid-cell ui-grid-col-6">
                                    <label for="inputmztolerance" style="float: top">m/z tolerance: &nbsp;</label>
                                    <p:inputText id="inputmztolerance" size="2" maxlength="4"  
                                                 value="#{CEMSTargetedController.inputmzTolerance}" 
                                                 validator="#{CEMSTargetedController.validateInputTolerance}"
                                                 required="true"
                                                 pt:placeholder="enter tolerance for m/z"
                                                 style="width:100%;height: 300%"
                                                 />
                                    <p:message for="inputmztolerance" styleClass="errormessage"></p:message>
                                </div>
                                <div class="ui-panelgrid-cell ui-grid-col-6">
                                    <label for="inputmzmodetolerance" style="float: top">&nbsp;</label>
                                    <p:selectOneRadio id="inputmzmodetolerance" 
                                                      required="true"
                                                      requiredMessage="Choose tolerance mode"
                                                      value="#{CEMSTargetedController.inputmzModeTolerance}">
                                        <f:selectItem itemValue="ppm" itemLabel="ppm"/>
                                        <f:selectItem itemValue="mDa" itemLabel="mDa"/>  
                                    </p:selectOneRadio>
                                </div>
                                <div class="ui-panelgrid-cell ui-grid-col-6">
                                    <label for="inputrmttolerance" style="float: top">RMT tolerance: &nbsp;</label>
                                    <p:inputText id="inputrmttolerance" size="2" maxlength="4"  
                                                 value="#{CEMSTargetedController.inputRMTTolerance}" 
                                                 validator="#{CEMSTargetedController.validateInputTolerance}"
                                                 required="true"
                                                 pt:placeholder="enter tolerance for effective mobility"
                                                 style="width:100%;height: 300%"
                                                 />
                                    <p:message for="inputmztolerance" styleClass="errormessage"></p:message>
                                </div>
                                <div class="ui-panelgrid-cell ui-grid-col-6">
                                    <label for="inputrmtmodetolerance" style="float: top">&nbsp;</label>
                                    <p:selectOneRadio id="inputrmtmodetolerance" 
                                                      required="true"
                                                      requiredMessage="Choose tolerance mode"
                                                      value="#{CEMSTargetedController.inputRMTModeTolerance}">
                                        <f:selectItem itemValue="percentage" itemLabel="%"/>
                                        <!--<f:selectItem itemValue="absolute" itemLabel="sec"/>-->
                                    </p:selectOneRadio>
                                </div>
                            </p:row>
                            <p:row></p:row>
                            
                            <p:row></p:row>
                            
                        </p:panelGrid>
                        
                        <hr/>

                        <center>

                            <h:commandButton
                                id="submit" 
                                value="submit" 
                                actionListener="#{CEMSTargetedController.submitTargetedCEMSSearch(4)}" 
                                action="cems_targeted_list?faces-redirect=true"
                                style="width:40%">
                            </h:commandButton>
                            <br/>
                            <br/>
                            <h:commandButton  
                                id="reset" 
                                type="submit" 
                                value="reset" 
                                action="#{CEMSTargetedController.clearForm()}"
                                immediate="true"
                                style="width:40%"> 
                                <f:ajax render="@form"/>
                                <f:actionListener type="org.omnifaces.eventlistener.ResetInputAjaxActionListener" />
                            </h:commandButton>
                        </center>


                    </div>
                </h:form>
            </div>
            
            <script type="text/javascript">
                $(document).ready(function () {
                    function to_csv(workbook) {
                        var result = [];
                        var csvFile;
                        workbook.SheetNames.forEach(function(sheetName) {
                            var csv = XLSX.utils.sheet_to_csv(workbook.Sheets[sheetName]);
                            if(csv.length > 0){
                                csvFile = csv;
                            }
                        });
                        return csvFile;
                    }
                    function detectSeparator(firstLine) {
                        var firstLine = firstLine.split('\n')[0];
                        if (firstLine.includes(",")){
                            return ",";
                        }
                        if (firstLine.includes(";")){
                            return ";";
                        }
                        if (firstLine.includes("|")){
                            return "|";
                        }
                        if (firstLine.includes("\t")){
                            return "\t";
                        }
                    }
                    function handleFileSelect(evt) {
                        async:false
                        var files = evt.target.files; // FileList object

                        // use the 1st file from the list
                        f = files[0];
                        var reader = new FileReader();
                        var extension = f.name.split('.').pop().toLowerCase();
                        // Closure to capture the file information.
                        reader.onload = (function (theFile) {
                            return function (e) {
                                switch (extension) {
                                    case 'txt':
                                    case 'csv':
                                        var csvFile = e.target.result;
                                        var delimiter = detectSeparator(csvFile);
                                        var options={"separator" : delimiter};
                                        var rows = $.csv.toArrays(csvFile);
                                        break;
                                    case 'xls':
                                    case 'xlsx':
                                        var data = e.target.result;
                                        var workbook = XLSX.read(data, {type: 'binary'});
                                        var csvFile = to_csv(workbook);
                                        var rows = $.csv.toArrays(csvFile);
                                        break;
                                }
                                var mzColumn = -1;
                                var mzs ="";
                                var effMobColumn = -1;
                                var effMobs ="";
                                var FragmentsColumn = -1;
                                var fragments ="";
                                
                                for (var i = 0; i &lt; rows[0].length; i++) {
                                    if (rows[0][i].includes("mz")) {
                                        var mzColumn = i;
                                    }
                                    if (rows[0][i].includes("effMob")) {
                                        var effMobColumn = i;
                                    }
                                    if (rows[0][i].includes("fragments")) {
                                        var FragmentsColumn = i;
                                    }
                                }
                                if(mzColumn &gt;= 0)
                                {
                                    for (var i = 1; i  &lt; rows.length; i++) {
                                        mzs += rows[i][mzColumn] + "\n";
                                }
                                    jQuery('#inputmasses').val(mzs);
                                }
                                else{
                                    jQuery('#inputmasses').val("Upload a correct file (see manual)");
                                }
                                if(effMobColumn &gt;= 0)
                                {
                                    for (var i = 1; i  &lt; rows.length; i++) {
                                        effMobs += rows[i][effMobColumn] + "\n";
                                }
                                    jQuery('#effmobs').val(effMobs);
                                }
                                else{
                                    jQuery('#effmobs').val("See format for uploading files in manual");
                                }
                                if(FragmentsColumn &gt;= 0)
                                {
                                    for (var i = 1; i  &lt; rows.length; i++) {
                                        fragments += rows[i][FragmentsColumn] + "\n";
                                }
                                    jQuery('#groupedsignals').val(fragments);
                                }
                                else{
                                    jQuery('#groupedsignals').val("See format for uploading files in manual");
                                }
                            };
                        })(f);
			switch (extension) {
                            case 'txt':
                            case 'csv':
	      	              reader.readAsText(f);
			      break;
                            case 'xls':
                            case 'xlsx':
	      	              reader.readAsBinaryString(f);
			      break;
			}
                    }
                    document.getElementById('uploadceexperiment').addEventListener('change', handleFileSelect, false);
                });
                
            </script>
            <script defer="defer" src="assets/js/jquery.csv.min.js" type="text/javascript"></script>
            <script defer="defer" src="assets/js/jszip.min.js" type="text/javascript"></script>
            <script defer="defer" src="assets/js/xlsx.min.js" type="text/javascript"></script>
        </ui:define>
    </ui:composition>

</html>
